{
  "openapi": "3.0.3",
  "info": {
    "title": "Simple Ethereum type JSON-RPC Methods",
    "description": "This app showcases a Ethereum type JSON-RPC API connecting to Cronos testnet node. Some methods require params, a sample request body is presented in each method correspondingly. You can copy and paste those sample requests for simplicity.",
    "version": "v0.0.1"
  },
  "servers": [
    {
      "url": "https://aptos-mainnet.blockeden.xyz/L5VnPaJxi1z55BHjB4XX/v1"
    }
  ],
  "paths": {
    "eth_accounts": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_accounts",
        "description": "Returns array of all accounts owned by the client.\n\n",
        "operationId": "eth_accounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_blockNumber": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_blockNumber",
        "description": "Returns the number of most recent block.\n\n",
        "operationId": "eth_blockNumber",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_call": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_call",
        "description": "Executes a new message call immediately without creating a transaction on the block chain.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\":[{\n\t\t\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\"\n\t}, \"latest\"],\"id\":1}",
        "operationId": "eth_call",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_estimateGas": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_estimateGas",
        "description": "Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\":[{\n\t\t\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\"\n\t}, \"latest\"],\"id\":1}",
        "operationId": "eth_estimateGas",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_gasPrice": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_gasPrice",
        "description": "Returns the current gas price in the default EVM denomination parameter.\n\n",
        "operationId": "eth_gasPrice",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getBalance": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getBalance",
        "description": "Returns the balance of the account of given address.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getBalance\",\"params\":[\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\", \"latest\"],\"id\":1}",
        "operationId": "eth_getBalance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getBlockByHash": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getBlockByHash",
        "description": "Returns information about a block by hash.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByHash\",\"params\":[\"0xdc0818cf78f21a8e70579cb46a43643f78291264dda342ae31049421c82d21ae\", false],\"id\":1}",
        "operationId": "eth_getBlockByHash",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getBlockByNumber": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getBlockByNumber",
        "description": "Returns information about a block by block number.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\":[\"0x1b4\", true],\"id\":1}",
        "operationId": "eth_getBlockByNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getBlockTransactionCountByHash": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getBlockTransactionCountByHash",
        "description": "Returns the number of transactions sent from an address.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionCount\",\"params\":[\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\"latest\"],\"id\":1}",
        "operationId": "eth_getBlockTransactionCountByHash",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getBlockTransactionCountByNumber": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getBlockTransactionCountByNumber",
        "description": "Returns the number of transactions in a block from a block matching the given block hash.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByHash\",\"params\":[\"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\"],\"id\":1}",
        "operationId": "eth_getBlockTransactionCountByNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getCode": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getCode",
        "description": "Returns code at a given address.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getCode\",\"params\":[\"0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b\", \"0x2\"],\"id\":1}",
        "operationId": "eth_getCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getFilterChanges": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getFilterChanges",
        "description": "Polling method for a filter, which returns an array of logs which occurred since last poll.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getFilterChanges\",\"params\":[\"0x16\"],\"id\":73}",
        "operationId": "eth_getFilterChanges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getFilterLogs": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getFilterLogs",
        "description": "Returns an array of all logs matching filter with given id.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getFilterLogs\",\"params\":[\"0x16\"],\"id\":74}",
        "operationId": "eth_getFilterLogs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getLogs": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getLogs",
        "description": "Returns an array of all logs matching a given filter object.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getLogs\",\"params\":[{\"topics\":[\"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b\"]}],\"id\":74}",
        "operationId": "eth_getLogs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getStorageAt": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getStorageAt",
        "description": "Returns the value from a storage position at a given address.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getBalance\",\"params\":[\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\", \"latest\"],\"id\":1}",
        "operationId": "eth_getStorageAt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getTransactionByBlockHashAndIndex": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getTransactionByBlockHashAndIndex",
        "description": "Returns information about a transaction by block hash and transaction index position.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockHashAndIndex\",\"params\":[\"0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b\", \"0x0\"],\"id\":1}",
        "operationId": "eth_getTransactionByBlockHashAndIndex",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getTransactionByBlockNumberAndIndex": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getTransactionByBlockNumberAndIndex",
        "description": "Returns information about a transaction by block number and transaction index position.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockNumberAndIndex\",\"params\":[\"0x29c\", \"0x0\"],\"id\":1}",
        "operationId": "eth_getTransactionByBlockNumberAndIndex",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getTransactionByHash": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getTransactionByHash",
        "description": "Returns the information about a transaction requested by transaction hash.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByHash\",\"params\":[\"0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\"],\"id\":1}",
        "operationId": "eth_getTransactionByHash",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getTransactionCount": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getTransactionCount",
        "description": "Returns the value from a storage position at a given address.\n\nRequest body sample: {\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x0\", \"latest\"], \"id\": 1}",
        "operationId": "eth_getTransactionCount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getTransactionReceipt": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getTransactionReceipt",
        "description": "Returns the receipt of a transaction by transaction hash.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionReceipt\",\"params\":[\"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\"],\"id\":1}",
        "operationId": "eth_getTransactionReceipt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getUncleByBlockHashAndIndex": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getUncleByBlockHashAndIndex",
        "description": "Returns information about a uncle of a block by hash and uncle index position.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockHashAndIndex\",\"params\":[\"0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b\", \"0x0\"],\"id\":1}",
        "operationId": "eth_getUncleByBlockHashAndIndex",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getUncleByBlockNumberAndIndex": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getUncleByBlockNumberAndIndex",
        "description": "Returns information about a uncle of a block by number and uncle index position.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\":[\"0x29c\", \"0x0\"],\"id\":1}",
        "operationId": "eth_getUncleByBlockNumberAndIndex",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getUncleCountByBlockHash": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getUncleCountByBlockHash",
        "description": "Returns the number of transactions in a block matching the given block number.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByNumber\",\"params\":[\"0xe8\"],\"id\":1}",
        "operationId": "eth_getUncleCountByBlockHash",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_getUncleCountByBlockNumber": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_getUncleCountByBlockNumber",
        "description": "Returns the number of uncles in a block from a block matching the given block number.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockNumber\",\"params\":[\"0xe8\"],\"id\":1}",
        "operationId": "eth_getUncleCountByBlockNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_newBlockFilter": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_newBlockFilter",
        "description": "Creates a filter in the node, to notify when a new block arrives.\n\n",
        "operationId": "eth_newBlockFilter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_newFilter": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_newFilter",
        "description": "Creates a filter object, based on filter options, to notify when the state changes (logs).\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_newFilter\",\"params\":[{\n\t\t\"fromBlock\": \"0x1\",\n\t\t\"toBlock\": \"0x2\",\n\t\t\"address\": \"0x8888f1f195afa192cfee860698584c030f4c9db1\",\n\t\t\"topics\": [\"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b\", null, [\"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b\", \"0x0000000000000000000000000aff3454fce5edbc8cca8697c15331677e6ebccc\"]]\n\t  }],\"id\":73}",
        "operationId": "eth_newFilter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_newPendingTransactionFilter": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_newPendingTransactionFilter",
        "description": "Creates a filter in the node, to notify when new pending transactions arrive.\n\n",
        "operationId": "eth_newPendingTransactionFilter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_protocolVersion": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_protocolVersion",
        "description": "Returns the current ethereum protocol version.\n\n",
        "operationId": "eth_protocolVersion",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_sendRawTransaction": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_sendRawTransaction",
        "description": "Creates new message call transaction or a contract creation for signed transactions.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_sendRawTransaction\",\"params\":[\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"],\"id\":1}",
        "operationId": "eth_sendRawTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_sendTransaction": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_sendTransaction",
        "description": "Creates new message call transaction or a contract creation, if the data field contains code.\n\nRequest body sample: { \"id\": 1, \"jsonrpc\": \"2.0\", \"method\": \"eth_sendTransaction\", \"params\": [{ \"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\", \"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" }] }",
        "operationId": "eth_sendTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_sign": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_sign",
        "description": "The sign method calculates an Ethereum specific signature with: sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))).\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_sign\",\"params\":[\"0x9b2055d370f73ec7d8a03e965129118dc8f5bf83\", \"0xdeadbeaf\"],\"id\":1}",
        "operationId": "eth_sign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_syncing": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_syncing",
        "description": "The sync status object may need to be different depending on the details of Tendermint's sync protocol. However, the 'synced' result is simply a boolean, and can easily be derived from Tendermint's internal sync state.\n\n",
        "operationId": "eth_syncing",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "eth_uninstallFilter": {
      "post": {
        "tags": [
          "ETH Methods"
        ],
        "summary": "eth_uninstallFilter",
        "description": "Uninstalls a filter with given id. Should always be called when watch is no longer needed.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"eth_uninstallFilter\",\"params\":[\"0xb\"],\"id\":73}",
        "operationId": "eth_uninstallFilter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "net_listening": {
      "post": {
        "tags": [
          "Net Methods"
        ],
        "summary": "net_listening",
        "description": "Returns if client is actively listening for network connections.\n\n",
        "operationId": "net_listening",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "net_peerCount": {
      "post": {
        "tags": [
          "Net Methods"
        ],
        "summary": "net_peerCount",
        "description": "Returns the number of peers currently connected to the client.\n\n",
        "operationId": "net_peerCount",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "net_version": {
      "post": {
        "tags": [
          "Net Methods"
        ],
        "summary": "net_version",
        "description": "Returns the current network id.\n\n",
        "operationId": "net_version",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "web3_clientVersion": {
      "post": {
        "tags": [
          "Web3 Methods"
        ],
        "summary": "web3_clientVersion",
        "description": "Get the web3 client version.\n\n",
        "operationId": "web3_clientVersion",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    },
    "web3_sha3": {
      "post": {
        "tags": [
          "Web3 Methods"
        ],
        "summary": "web3_sha3",
        "description": "Returns Keccak-256 (not the standardized SHA3-256) of the given data.\n\nRequest body sample: {\"jsonrpc\":\"2.0\",\"method\":\"web3_sha3\",\"params\":[\"0x67656c6c6f20776f726c64\"],\"id\":1}",
        "operationId": "web3_sha3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Input": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "jsonrpc": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        }
      },
      "Output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "jsonrpc": {
            "type": "string"
          },
          "result": {
            "type": "string"
          }
        }
      }
    }
  }
}
